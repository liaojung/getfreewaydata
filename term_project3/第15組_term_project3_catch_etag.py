# -*- coding: utf-8 -*-
"""
第15組_Term Project3_catch_eTag.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PwSPJxtr9F_ZHZgqkEGM6U6hA_0Fkb2S
"""
#原本在colab執行，更改29、55、88行的存取位置就能執行(關於下載、存取)
#42、43行能選地點，50、51行能選時間(資料處理的) 這邊舉例所以我沒有寫所有時間，但可以直接改

import numpy as np
import pandas as pd
import os
import gzip
import shutil
import requests
from datetime import datetime, timedelta
import xml.etree.ElementTree as ET

#資料下載
start_time = datetime.strptime('1605', '%H%M')
end_time = datetime.strptime('2000', '%H%M')
time_interval = timedelta(minutes=5)

while start_time <= end_time:
  url = 'https://tisvcloud.freeway.gov.tw/history/motc20/ETag/20231222/ETagPairLive_'+start_time.strftime('%H%M')+'.xml.gz'
  path = "C:/Users/yingj/nycu/11201/巨集/3 陳彥佑/term_project3/data/"

  gz_file = "1222_"+start_time.strftime('%H%M')+".xml.gz"
  uncompressed_file_name = "1222_"+start_time.strftime('%H%M')+".xml"

  response = requests.get(url)
  with open(os.path.join(path, gz_file), 'wb') as file:
    file.write(response.content)
  with gzip.open(os.path.join(path, gz_file), 'rb') as file, open(os.path.join(path, uncompressed_file_name), 'wb') as uncompressed:
    shutil.copyfileobj(file, uncompressed)
  start_time += time_interval

#資料處理
#eTag_selected = "01F0248S-01F0264S"  #圓山_01F0248S_台北_01F0264S_三重(南下)
eTag_selected = "01F0264S-01F0293S"  #台北_01F0264S_三重_01F0293S_五股(南下)
a = []
for i in ['31', '32', '41', '42', '5']:
  for j in ['travel_time', 'SMS', 'count']:
    a.append(i+"_"+j)
data_sets = pd.DataFrame(columns = a)

start_time = datetime.strptime('1605', '%H%M')
end_time = datetime.strptime('1615', '%H%M')
time_interval = timedelta(minutes=5)

while start_time <= end_time:
  file = 'C:/Users/yingj/nycu/11201/巨集/3 陳彥佑/term_project3/data/1222_'+start_time.strftime('%H%M')+'.xml'
  namespace = {"ns": "http://traffic.transportdata.tw/standard/traffic/schema/"}
  tree = ET.parse(file)

  eTag_lives = tree.findall("./ns:ETagPairLives/ns:ETagPairLive", namespaces = namespace)
  data = np.zeros((3,5))

  for eTag in eTag_lives:
    eTag_id = eTag.find("./ns:ETagPairID", namespaces = namespace).text

    if eTag_id == eTag_selected:
        check_s = int(eTag.find("./ns:StartETagStatus", namespaces = namespace).text)
        check_e = int(eTag.find("./ns:EndETagStatus", namespaces = namespace).text)
        if check_s != 0 or check_e != 0:
          print(start_time.strftime('%H%M')+' failed')

        flows = eTag.findall("./ns:Flows/ns:Flow", namespaces = namespace)
        cc = 0
        for flow in flows:
          #vehicletype = flow.find("ns:VehicleType" , namespaces=namespace).text
          traveltime = int(flow.find("ns:TravelTime" , namespaces=namespace).text)
          sms = int(flow.find("ns:SpaceMeanSpeed" , namespaces=namespace).text)
          count = int(flow.find("ns:VehicleCount" , namespaces=namespace).text)
          data[0][cc] = traveltime
          data[1][cc] = sms
          data[2][cc] = count
          cc += 1
  data = data.T.reshape(1,15)
  data = pd.DataFrame(data, index = [start_time.strftime('%H:%M')], columns = a)
  data_sets = pd.concat([data_sets, data])
  start_time += time_interval
print(data_sets)

data_sets.to_csv("C:/Users/yingj/nycu/11201/巨集/3 陳彥佑/term_project3/eTag_1222_"+ eTag_selected + ".csv")